#!/usr/bin/env node
/* eslint-disable no-sync */
// eslint-disable-next-line max-params
(function main(PACKAGE, PROCESS, HOME_DIR, FS, COMMAND, CHALK, extract_places) {
    COMMAND
        .version(PACKAGE.version, '-v, --version')
        .usage('files')
        .parse(PROCESS.argv)
        .name(PACKAGE.name)
        ; // eslint-disable-line indent
    write_to_stderr('');
    if (COMMAND.args.length > 0) {
        return parse_files(COMMAND.args);
    }
    let file_i = 0;
    let default_file_name = 'f';
    let full_file_path;
    const default_file_list = [];
    write_info_to_stderr(`🔍  Looking in ${ HOME_DIR }/Downloads for files named f*.txt`); // eslint-disable-line max-len
    // eslint-disable-next-line max-len
    while (FS.existsSync(full_file_path = `${ HOME_DIR }/Downloads/${ default_file_name }.txt`)) {
        default_file_list.push(full_file_path);
        default_file_name = `f (${ ++file_i })`;
    }
    if (0 === default_file_list.length) {
        // eslint-disable-next-line max-len
        write_warning_to_stderr(`🤷‍  Could not find any files named f*.txt in ${ HOME_DIR }/Downloads`); // eslint-disable-line indent
        return null;
    }
    return parse_files(default_file_list);

    // -----------

    function parse_files(raw_file_list) {
        try {
            const safe_file_list = build_file_list(raw_file_list);
            if (0 === safe_file_list.length) {
                write_warning_to_stderr('🤷‍  There are no files to parse');
                return 'null';
            }
            const places = extract_places(safe_file_list);
            if (Array.isArray(places)) {
                if (0 === places.length) {
                    write_warning_to_stderr('🤷‍  No places were in the files');
                }
                write_to_stdout(JSON.stringify(places));
                write_success_to_stderr('🏁  Successfully parsed files');
                return places;
            }
        } catch (exception) {
            // do nothing
        }
        write_error_to_stderr('😞  Could not parse the files');
        return 'null';

        // -----------

        function build_file_list(file_list) {
            const safe_file_list = [];
            for (let i = 0, n = file_list.length - 1; i <= n; i++) {
                const raw_file = file_list[i];
                if (FS.existsSync(raw_file)) {
                    safe_file_list.push(raw_file);
                } else {
                    write_warning_to_stderr(`⚠️  ${ raw_file } is not a file. Ignoring.`); // eslint-disable-line max-len
                }
            }
            return safe_file_list;
        }
    }

    // -----------

    function write_to_stdout(text) {
        PROCESS.stdout.write(`${ text }\n`);
    }
    function write_to_stderr(text) {
        PROCESS.stderr.write(`${ text }\n`);
    }
    function write_info_to_stderr(text) {
        PROCESS.stderr.write(`${ CHALK.cyan(text) }\n`);
    }
    function write_success_to_stderr(text) {
        PROCESS.stderr.write(`${ CHALK.green(text) }\n`);
    }
    function write_warning_to_stderr(text) {
        PROCESS.stderr.write(`${ CHALK.yellow(text) }\n`);
    }
    function write_error_to_stderr(text) {
        PROCESS.stderr.write(`${ CHALK.red(text) }\n`);
    }
}(
    require('../package.json'),
    require('process'),
    require('os').homedir(),
    require('fs'),
    require('commander'),
    require('chalk'),
    require('../source/index.js'),
));
